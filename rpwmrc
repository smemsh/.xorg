#
# ratpoison runcom
# scott@smemsh.net
# http://smemsh.net/src/.ratpoison/rc
#
##############################################################################

startup_message off
chdir

msgwait 0

# XXX make this infinite, use readline, load it on start
set historysize 999

# use fc-list to see fonts (ie, uses fontconfig names)
set font inconsolata-14

set fgcolor LightGreen
set bgcolor Black
set barpadding 0 0
set barborder 0
set padding 0 0 0 0
set waitcursor 1

# %a by the application name (resource name),
# %c by the resource class,
# %f by the frame number,
# %g by the gravity of the window,
# %h by the height of the window,
# %H by the unit to resize the window vertically (height_inc)
# %i by the X Window ID,
# %p by the process ID,
# %l by the last access number,
# %M by the string Maxsize, if it specifies a maximum size,
# %n by the window number,
# %s by window status [* active, + prev, - otherwise] # XXX TODO stack
# %S by the screen number
# %t by the window name (see set winname),
# %T by the string Transient, if it is a transient window
# %w by the width of the window
# %W by the unit to resize the window horizontally (width_inc)
# %x by the xine screen number and
# %% by a single %
# XXX TODO controlling tty
# XXX TODO session id, etc (all ps -o)
# XXX TODO callout for string
# XXX TODO dlopen common externals to avoid fork, etc.
# XXX TODO value of environmnet variable
# XXX TODO overload 'name' to ferry in external data?
#
# TODO this doesn't seem to actually work for field widths and
#   other things like '-' for alignment (just breaks); hack
#   ratpoison to do a real printf template
#
#set winfmt %2s %5l %i %T %30t
set winfmt %2s %5l %n %T %30t
set winname name

# from the docs:
#
#deletewindow	Run after a window is withdrawn.
#newwindow	Run after a new window is mapped.
#key		Run whenever a top level key is pressed.  (by default C-t)
#quit		Run before exiting ratpoison.
#restart	Run before restarting ratpoison.
#switchframe	Run after a frame actually switched, but
#		before  the window in it is focused.
#switchgroup	Run after selecting a new group.
#switchwin	Run after a new window is selected.  (With
#		dedication, it may already be inactive
#		again, if it  was put  into  another frame)

# this assists with rpsave script by not actually switching
# the windows (what `other' will do after such an event) or
# displaying the window list
#
# TODO above comment appears out of date, the below is needed
# (as addhook) when switching manually to different group to
# maintain the window list if present pre-switch (and not
# display it if not).  comment may mean that the rpdump/rpsave
# should do the dellhook, dump, then addhook back.  but
# addhook is not present elsewhere in this file prior to
# adding it here:
#
addhook switchgroup exec ratpoison -c other
addhook switchgroup exec ratpoison -c groups

#delhook switchgroup exec ratpoison -c other
#delhook switchgroup exec ratpoison -c groups

#addhook switchwin exec ratpoison -c groups | sed -r 's,^[0-9]*.,,'
#addhook deletewindow exec # want group name port pid

### TOP ######################################################################

undefinekey top C-t

definekey top M-grave           colon
definekey top M-space           other
definekey top C-space           gother
definekey top M-j               gnext
definekey top M-k               gprev
definekey top M-h               prev
definekey top M-l               next

definekey top M-P               exec ratpoison -c 'gmove p'; ratpoison -c other; ratpoison -c next
definekey top M-W               exec ratpoison -c 'gmove w'; ratpoison -c other; ratpoison -c next
definekey top M-Q               exec ratpoison -c 'gmove q'; ratpoison -c other; ratpoison -c next

#definekey top M-b               exec chromium
#definekey top M-b               exec ggw `ratpoison -c "prompt search: "`
definekey top M-b               exec ratpoison -c "echo $(batt)"
definekey top M-semicolon       exec google-chrome --profile-directory="Default"
definekey top M-w               exec google-chrome --profile-directory="Profile 1"
definekey top M-p               verbexec ppause chrome
definekey top M-u               verbexec presume chrome
definekey top M-i               exec xinvert
definekey top M-t               exec ratpoison -c "echo $(date +%Y%m%d%H%M%S)"

definekey top M-q               delete
definekey top M-bracketleft     groups
definekey top M-bracketright    windows
definekey top M-Return          exec urxvtc
definekey top M-apostrophe      title
definekey top M-period          exec rpright
definekey top M-comma           exec rpleft
definekey top M-backslash       exec rprenumber
definekey top M-slash           select
definekey top C-slash           gselect

# UPDATE: this no longer used,
# see instead http://smemsh.net/src/ratutils/rptmux
#
# tmux mappings, unfortunately no way to feed back the mapped
# key into its own definition so we have to define each and
# every one manually
#
# TODO key injects for focused window would be simple to
# implement in ratpoison directly with a new command by
# snarfing the code for xdotool (xkeyinject is just a wrapper
# that gets windowid due to a race condition, we cannot rely
# on same window being carried across, see its comments)
#
#definekey top s-colon           exec xkeyinject F13 colon
#definekey top s-comma           exec xkeyinject F13 comma
#definekey top s-period          exec xkeyinject F13 period
#definekey top s-semicolon       exec xkeyinject F13 semicolon
#definekey top s-bracketleft     exec xkeyinject F13 bracketleft
#definekey top s-bracketright    exec xkeyinject F13 bracketright
#definekey top s-l               exec xkeyinject F13 l
#definekey top s-c               exec xkeyinject F13 c
#definekey top s-p               exec xkeyinject F13 p
#definekey top s-n               exec xkeyinject F13 n
#definekey top s-s               exec xkeyinject F13 s
#definekey top s-z               exec xkeyinject F13 z
#definekey top s-o               exec xkeyinject F13 o
#definekey top s-0               exec xkeyinject F13 0
#definekey top s-1               exec xkeyinject F13 1
#definekey top s-2               exec xkeyinject F13 2
#definekey top s-3               exec xkeyinject F13 3
#definekey top s-4               exec xkeyinject F13 4
#definekey top s-5               exec xkeyinject F13 5
#definekey top s-6               exec xkeyinject F13 6
#definekey top s-7               exec xkeyinject F13 7
#definekey top s-8               exec xkeyinject F13 8
#definekey top s-9               exec xkeyinject F13 9
#definekey top s-S-l             exec xkeyinject F13 L
#definekey top s-S-o             exec xkeyinject F13 O

alias gsel gselect

# rpinit
# note: should be idempotent, to survive "ratpoison -c restart", etc
# note: passed unaltered to 'sh -c' so be sure no bashisms
#
verbexec xsetroot -solid black
verbexec xset m 2 16
verbexec xset r rate 265 85
verbexec xrdb -load ~/.Xresources
verbexec pgrep urxvtd 2>&1 >/dev/null || urxvtd -q -f -o
#verbexec setxkbmap -model pc104 -layout us -variant intl
verbexec xmodmap ~/.Xmodmap 2>&1
#verbexec setxkbmap -layout us,es
verbexec rptmux

echo rpinit finished
