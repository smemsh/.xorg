#
# sdorfehs (nee ratpoison) runcom
# scott@smemsh.net
# https://github.com/smemsh/.xorg/
#
# TODO: comments must start before keyword or get consumed as value tokens
#
##############################################################################

set startupmessage 0
set msgwait 0
set vscreens 2
set ignoreresizehints 1
set rudeness 31

chdir

#
alias vsel vselect

# XXX make this infinite, use readline, load it on start
set historysize 999

# use fc-list to see fonts (ie, uses fontconfig names)
set font inconsolata-14

set fgcolor LightGreen
set bgcolor Black
set bargravity ne
set barsticky 0

set barpadding 0 0
set barborder 0
set padding 0 0 0 0
set waitcursor 1

# 0 -> st/urxvt, 1 -> urxvtc, but breaks execv
set winaddcurvscreen 0

# %a by the application name (resource name),
# %c by the resource class,
# %f by the frame number,
# %g by the gravity of the window,
# %h by the height of the window,
# %H by the unit to resize the window vertically (height_inc)
# %i by the X Window ID,
# %p by the process ID,
# %l by the last access number,
# %M by the string Maxsize, if it specifies a maximum size,
# %n by the window number,
# %s by window status [* active, + prev, - otherwise] # XXX TODO stack
# %S by the screen number
# %t by the window name (see set winname),
# %T by the string Transient, if it is a transient window
# %w by the width of the window
# %W by the unit to resize the window horizontally (width_inc)
# %x by the xrandr screen number and
# %% by a single %
# XXX TODO controlling tty
# XXX TODO session id, etc (all ps -o)
# XXX TODO callout for string
# XXX TODO dlopen common externals to avoid fork, etc.
# XXX TODO value of environmnet variable
# XXX TODO overload 'name' to ferry in external data?
#
# TODO this doesn't seem to actually work for field widths and
#   other things like '-' for alignment (just breaks); hack
#   ratpoison to do a real printf template
#
#set winfmt %2s %5l %i %T %30t
set winfmt %2s %5l %n %30t
set winname name

# hooks
#
#deletewindow	Run after a window is withdrawn.
#key		Run whenever a top level key is pressed.
#newwindow	Run after a new window is mapped.
#quit		Run before exiting ratpoison.
#restart	Run before restarting ratpoison.
#switchframe	Run after a frame actually switched, but
#		before  the window in it is focused.
#switchscreen	Run when the user switches to a different screen.
#switchvscreen	Run when the user switches to a different virtual screen.
#switchwin	Run after a new window is selected.  (With
#		dedication, it may already be inactive
#		again, if it  was put  into  another frame)
#
# the below is needed when switching manually to different group
# to maintain the window list if present pre-switch (and not
# display it if not)
#
#addhook switchvscreen other
#addhook switchvscreen vscreens

#addhook switchwin exec ratpoison -c groups | sed -r 's,^[0-9]*.,,'
#addhook deletewindow exec # want group name port pid

### TOP ######################################################################

# refer to X11/keysymdef.h

undefinekey top C-t

definekey top M-grave           colon
definekey top M-space           other
definekey top C-space           vother
definekey top M-j               vnext
definekey top M-k               vprev
definekey top M-h               prev
definekey top M-l               next
definekey top M-N               iprev
definekey top M-n               inext

# moving an arm for the cursor keys is just too slow
definekey top M-H               meta Left
definekey top M-J               meta Down
definekey top M-K               meta Up
definekey top M-L               meta Right

definekey top M-P               exec rp vmove p; rp vother; rp other
definekey top M-W               exec rp vmove w; rp vother; rp other
definekey top M-Q               exec rp vmove q; rp vother; rp other

#definekey top M-b               exec ggw `ratpoison -c "prompt search: "`
definekey top M-a               exec mousepark
definekey top M-b               exec rp echo $(batt)
definekey top M-O               exec rp echo $(timeopen)
definekey top M-M               exec rp echo $(timeline)
definekey top M-semicolon       execa rpafter gui-browser -p
definekey top M-w               execa rpafter gui-browser -w
definekey top M-p               verbexec ppause brave-browser
definekey top M-u               verbexec presume brave-browser
definekey top M-i               exec xinvert

definekey top M-t               exec rptaskline
definekey top M-c               exec rptaskdesc
definekey top M-T               exec rptaskline taskstop
definekey top M-r               exec rptaskline rptaskmenu
definekey top M-S               exec rptaskline taskcont
definekey top M-s               exec rptaskline timecont
definekey top M-X               exec rptaskline tasktmp
definekey top M-x               exec rptaskline timetmp
definekey top M-V               exec rptaskline tasklast
definekey top M-v               exec rptaskline timelast
definekey top M-U               exec rptaskline timeundo
definekey top M-e               exec rptaskline taskdone
definekey top M-D               exec rptaskline --prompt taskdo
definekey top M-d               exec rptaskline --prompt timedo

definekey top M-q               delete
definekey top M-bracketleft     vscreens
definekey top M-bracketright    windows
definekey top M-Return          execa rpafter exec st
definekey top M-apostrophe      title
definekey top M-period          exec rpright
definekey top M-comma           exec rpleft
definekey top M-backslash       exec rprenumber
definekey top M-slash           select
definekey top C-slash           vselect
definekey top M-R               redisplay

definekey top M-0               select 0
definekey top M-1               select 1
definekey top M-2               select 2
definekey top M-3               select 3
definekey top M-4               select 4
definekey top M-5               select 5
definekey top M-6               select 6
definekey top M-7               select 7
definekey top M-8               select 8
definekey top M-9               select 9

# M-m + key -> M-key, since we use already use the meta key for top binds
#
# we need at least:
# tmux list-keys | grep -P '^.*(M-\S*)\s+' | cut --complement -b 1-28 | field 1
#
newkmap metagen
definekey top M-m readkey metagen

definekey metagen a meta M-a
definekey metagen b meta M-b
definekey metagen c meta M-c
definekey metagen d meta M-d
definekey metagen e meta M-e
definekey metagen f meta M-f
definekey metagen g meta M-g
definekey metagen h meta M-h
definekey metagen i meta M-i
definekey metagen j meta M-j
definekey metagen k meta M-k
definekey metagen l meta M-l
definekey metagen m meta M-m
definekey metagen n meta M-n
definekey metagen o meta M-o
definekey metagen p meta M-p
definekey metagen q meta M-q
definekey metagen r meta M-r
definekey metagen s meta M-s
definekey metagen t meta M-t
definekey metagen u meta M-u
definekey metagen v meta M-v
definekey metagen w meta M-w
definekey metagen x meta M-x
definekey metagen y meta M-y
definekey metagen z meta M-z

definekey metagen A meta M-A
definekey metagen B meta M-B
definekey metagen C meta M-C
definekey metagen D meta M-D
definekey metagen E meta M-E
definekey metagen F meta M-F
definekey metagen G meta M-G
definekey metagen H meta M-H
definekey metagen I meta M-I
definekey metagen J meta M-J
definekey metagen K meta M-K
definekey metagen L meta M-L
definekey metagen M meta M-M
definekey metagen N meta M-N
definekey metagen O meta M-O
definekey metagen P meta M-P
definekey metagen Q meta M-Q
definekey metagen R meta M-R
definekey metagen S meta M-S
definekey metagen T meta M-T
definekey metagen U meta M-U
definekey metagen V meta M-V
definekey metagen W meta M-W
definekey metagen X meta M-X
definekey metagen Y meta M-Y
definekey metagen Z meta M-Z

definekey metagen C-a meta M-C-a
definekey metagen C-b meta M-C-b
definekey metagen C-c meta M-C-c
definekey metagen C-d meta M-C-d
definekey metagen C-e meta M-C-e
definekey metagen C-f meta M-C-f
definekey metagen C-g meta M-C-g
definekey metagen C-h meta M-C-h
definekey metagen C-i meta M-C-i
definekey metagen C-j meta M-C-j
definekey metagen C-k meta M-C-k
definekey metagen C-l meta M-C-l
definekey metagen C-m meta M-C-m
definekey metagen C-n meta M-C-n
definekey metagen C-o meta M-C-o
definekey metagen C-p meta M-C-p
definekey metagen C-q meta M-C-q
definekey metagen C-r meta M-C-r
definekey metagen C-s meta M-C-s
definekey metagen C-t meta M-C-t
definekey metagen C-u meta M-C-u
definekey metagen C-v meta M-C-v
definekey metagen C-w meta M-C-w
definekey metagen C-x meta M-C-x
definekey metagen C-y meta M-C-y
definekey metagen C-z meta M-C-z

definekey metagen 0 meta M-0
definekey metagen 1 meta M-1
definekey metagen 2 meta M-2
definekey metagen 3 meta M-3
definekey metagen 4 meta M-4
definekey metagen 5 meta M-5
definekey metagen 6 meta M-6
definekey metagen 7 meta M-7
definekey metagen 8 meta M-8
definekey metagen 9 meta M-9

definekey metagen braceleft meta M-braceleft
definekey metagen braceright meta M-braceright
definekey metagen greater meta M-greater
definekey metagen less meta M-less

definekey metagen Up meta M-Up
definekey metagen Down meta M-Down
definekey metagen Left meta M-Left
definekey metagen Right meta M-Right

# S-space seems to be unavailable in curses apps, so we send with Control
# instead so we can map into application (we prefix+C-Space in tmux)
#
definekey top S-s-space exec rpmeta C-q C-space

### RPINIT ###################################################################
#
# note: should be idempotent, to survive "ratpoison -c restart", etc
# note: exec passed unaltered to 'sh -c' so be sure no bashisms

# use a compositor, otherwise tearing artifacts in some gui apps
#verbexec xsetroot -solid black
execw hsetroot -solid '#000000'
execw picom -b

#
execw xrdb -load ~/.Xresources

# start at least one window during init, or rpafter will fail because no
# current window exists.  we always start a terminal first thing anyways.
#
vsel 1
vrename p
vsel 0
vrename w
execv 0 exec st
execv 1 exec st

# keyboard, touchpad, mouse, etc
execa xbanish
execw xinputs
exec rptmux

# TODO: rename windows, but hooks don't seem to run from events in rcfile, and
# setting title of window 0 will race with terminal spawn and win every time
